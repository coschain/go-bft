// Code generated by protoc-gen-go. DO NOT EDIT.
// source: message.proto

package message

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Votetype int32

const (
	Votetype_prevote   Votetype = 0
	Votetype_precommit Votetype = 1
)

var Votetype_name = map[int32]string{
	0: "prevote",
	1: "precommit",
}

var Votetype_value = map[string]int32{
	"prevote":   0,
	"precommit": 1,
}

func (x Votetype) String() string {
	return proto.EnumName(Votetype_name, int32(x))
}

func (Votetype) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{0}
}

type Proposal struct {
	Height               uint64   `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`
	Round                uint32   `protobuf:"varint,2,opt,name=round,proto3" json:"round,omitempty"`
	Timestamp            uint32   `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Data                 []byte   `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	PubKeyBytes          []byte   `protobuf:"bytes,5,opt,name=pub_key_bytes,json=pubKeyBytes,proto3" json:"pub_key_bytes,omitempty"`
	Signature            []byte   `protobuf:"bytes,6,opt,name=signature,proto3" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Proposal) Reset()         { *m = Proposal{} }
func (m *Proposal) String() string { return proto.CompactTextString(m) }
func (*Proposal) ProtoMessage()    {}
func (*Proposal) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{0}
}

func (m *Proposal) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Proposal.Unmarshal(m, b)
}
func (m *Proposal) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Proposal.Marshal(b, m, deterministic)
}
func (m *Proposal) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Proposal.Merge(m, src)
}
func (m *Proposal) XXX_Size() int {
	return xxx_messageInfo_Proposal.Size(m)
}
func (m *Proposal) XXX_DiscardUnknown() {
	xxx_messageInfo_Proposal.DiscardUnknown(m)
}

var xxx_messageInfo_Proposal proto.InternalMessageInfo

func (m *Proposal) GetHeight() uint64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *Proposal) GetRound() uint32 {
	if m != nil {
		return m.Round
	}
	return 0
}

func (m *Proposal) GetTimestamp() uint32 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *Proposal) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *Proposal) GetPubKeyBytes() []byte {
	if m != nil {
		return m.PubKeyBytes
	}
	return nil
}

func (m *Proposal) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

type Vote struct {
	Type                 Votetype  `protobuf:"varint,1,opt,name=type,proto3,enum=message.Votetype" json:"type,omitempty"`
	Height               uint64    `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	Round                uint32    `protobuf:"varint,3,opt,name=round,proto3" json:"round,omitempty"`
	Timestamp            uint32    `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Proposal             *Proposal `protobuf:"bytes,5,opt,name=proposal,proto3" json:"proposal,omitempty"`
	PubKeyBytes          []byte    `protobuf:"bytes,6,opt,name=pub_key_bytes,json=pubKeyBytes,proto3" json:"pub_key_bytes,omitempty"`
	Signature            []byte    `protobuf:"bytes,7,opt,name=signature,proto3" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Vote) Reset()         { *m = Vote{} }
func (m *Vote) String() string { return proto.CompactTextString(m) }
func (*Vote) ProtoMessage()    {}
func (*Vote) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{1}
}

func (m *Vote) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Vote.Unmarshal(m, b)
}
func (m *Vote) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Vote.Marshal(b, m, deterministic)
}
func (m *Vote) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Vote.Merge(m, src)
}
func (m *Vote) XXX_Size() int {
	return xxx_messageInfo_Vote.Size(m)
}
func (m *Vote) XXX_DiscardUnknown() {
	xxx_messageInfo_Vote.DiscardUnknown(m)
}

var xxx_messageInfo_Vote proto.InternalMessageInfo

func (m *Vote) GetType() Votetype {
	if m != nil {
		return m.Type
	}
	return Votetype_prevote
}

func (m *Vote) GetHeight() uint64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *Vote) GetRound() uint32 {
	if m != nil {
		return m.Round
	}
	return 0
}

func (m *Vote) GetTimestamp() uint32 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *Vote) GetProposal() *Proposal {
	if m != nil {
		return m.Proposal
	}
	return nil
}

func (m *Vote) GetPubKeyBytes() []byte {
	if m != nil {
		return m.PubKeyBytes
	}
	return nil
}

func (m *Vote) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

func init() {
	proto.RegisterEnum("message.Votetype", Votetype_name, Votetype_value)
	proto.RegisterType((*Proposal)(nil), "message.proposal")
	proto.RegisterType((*Vote)(nil), "message.vote")
}

func init() { proto.RegisterFile("message.proto", fileDescriptor_33c57e4bae7b9afd) }

var fileDescriptor_33c57e4bae7b9afd = []byte{
	// 270 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x91, 0xd1, 0x4a, 0xc3, 0x30,
	0x14, 0x86, 0xcd, 0x96, 0xb5, 0xdb, 0xa9, 0x95, 0x19, 0x44, 0x72, 0xe1, 0x45, 0x29, 0x28, 0x45,
	0x70, 0x17, 0xfa, 0x06, 0xde, 0x7a, 0xd7, 0x17, 0x18, 0xa9, 0x3b, 0x74, 0x45, 0xbb, 0x84, 0xe4,
	0x54, 0xe8, 0x3b, 0xf9, 0x64, 0x3e, 0x85, 0x24, 0xae, 0x74, 0x4c, 0x65, 0x77, 0xf9, 0xff, 0x0f,
	0x92, 0xf3, 0x9d, 0x40, 0xda, 0xa2, 0x73, 0xaa, 0xc6, 0x95, 0xb1, 0x9a, 0xb4, 0x88, 0xf7, 0x31,
	0xff, 0x64, 0x30, 0x37, 0x56, 0x1b, 0xed, 0xd4, 0xbb, 0xb8, 0x86, 0x68, 0x8b, 0x4d, 0xbd, 0x25,
	0xc9, 0x32, 0x56, 0xf0, 0x72, 0x9f, 0xc4, 0x15, 0xcc, 0xac, 0xee, 0x76, 0x1b, 0x39, 0xc9, 0x58,
	0x91, 0x96, 0x3f, 0x41, 0xdc, 0xc0, 0x82, 0x9a, 0x16, 0x1d, 0xa9, 0xd6, 0xc8, 0x69, 0x20, 0x63,
	0x21, 0x04, 0xf0, 0x8d, 0x22, 0x25, 0x79, 0xc6, 0x8a, 0xf3, 0x32, 0x9c, 0x45, 0x0e, 0xa9, 0xe9,
	0xaa, 0xf5, 0x1b, 0xf6, 0xeb, 0xaa, 0x27, 0x74, 0x72, 0x16, 0x60, 0x62, 0xba, 0xea, 0x05, 0xfb,
	0x67, 0x5f, 0xf9, 0x5b, 0x5d, 0x53, 0xef, 0x14, 0x75, 0x16, 0x65, 0x14, 0xf8, 0x58, 0xe4, 0x5f,
	0x0c, 0xf8, 0x87, 0x26, 0x14, 0xb7, 0xc0, 0xa9, 0x37, 0x18, 0x06, 0xbd, 0x78, 0xbc, 0x5c, 0x0d,
	0x7a, 0x1e, 0x7a, 0x50, 0x06, 0x7c, 0x60, 0x34, 0xf9, 0xdb, 0x68, 0xfa, 0xaf, 0x11, 0x3f, 0x36,
	0x7a, 0x18, 0x37, 0x15, 0x06, 0x4f, 0x0e, 0x9e, 0x1d, 0x40, 0x39, 0x2e, 0xf3, 0x97, 0x6c, 0x74,
	0x42, 0x36, 0x3e, 0x92, 0xbd, 0xbf, 0x83, 0xf9, 0xa0, 0x23, 0x12, 0x88, 0x8d, 0x45, 0x1f, 0x97,
	0x67, 0x22, 0x85, 0x85, 0xb1, 0xf8, 0xaa, 0xdb, 0xb6, 0xa1, 0x25, 0xab, 0xa2, 0xf0, 0xa7, 0x4f,
	0xdf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x39, 0x4e, 0x9d, 0x13, 0xe4, 0x01, 0x00, 0x00,
}
